pid /var/run/nginx.pid;
user nginx;

events {
    # Much more nginx processes than uwsgi ones is not a mistake.
    # Nginx serves all static files, uwsgi takes care only of Python requests.
    worker_connections 128;
}

http {
    include /etc/nginx/mime.types;

    # Some default global compression of content.
    gzip on;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_comp_level 9;
    gzip_types "*";
    gzip_vary on;

    server {
        # We have site running behind reverse proxy taking care of SSL,
        # that's why we need to care only about base HTTP port.
        listen 80;
        listen [::]:80;

        server_name webapp.example.com;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        location / {
            include /etc/nginx/uwsgi_params;
            uwsgi_read_timeout 60s;
            uwsgi_pass web:3030;

            uwsgi_param Host $host;
            uwsgi_param X-Real-IP $remote_addr;
            uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
            uwsgi_param X-Forwarded-Proto 'https';
        }

        # Browsers by default looks to this location for favicon, let's
        # redirect them to our location.
        location /favicon.ico {
            rewrite ^ https://webapp.example.com/static/favicon.ico permanent;
        }

        location /static/ {
            alias /var/www/webapp/static/;

            # We rely that change of static file makes different URL.
            expires max;

            # Some security headers to be sure. In app is venv with a lot of
            # modules and we cannot be sure what all of them includes.
            # If in some module someone passes vulnerable HTML it's good to
            # disable ability to open it to use some dirty techniques.
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
        }
    }
}
